// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init


generator client {
  provider = "prisma-client-js"
}

// datasource db {
//   provider = "mongodb"
//   url      = env("DATABASE_URL")
// }

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

// model Customer{
//   id      String @id @default(auto()) @map("_id") @db.ObjectId
//   name    String
//   email   String   @unique
//   phone   String
//   createdAt  DateTime @default(now())
//   updatedAt  DateTime @updatedAt
// }

// model User{
//   id String @id @default(auto()) @map("_id") @db.ObjectId
//   email String @unique
//   username String @unique
//   password String
//   firstname String
//   lastname String
//   phone String @unique
//   dob DateTime?  @db.Date
//   gender Gender
//   image String
//   role Role  @default(ATTENDANT)
//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt
//   shops Shop[]
// }

// model Shop{
//   id String @id @default(auto()) @map("_id") @db.ObjectId
//   name String
//   location String
//   slug String @unique
//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt
//   adminId String @db.ObjectId
//   admin User  @relation(fields: [adminId],references: [id])
//   attendantIds String[] @db.ObjectId
// }

// enum Gender{
//   MALE
//   FEMALE
// }

// enum Role{
//   ATTENDANT
//   ADMIN
// }









model Customer{
  id     Int @id @default(autoincrement())
  customerType  CustomerType @default(RETAIL)
  firstname    String
  lastname     String
  email   String   @unique
  phone   String   @unique
  gender  Gender
  maxCreditLimit  Float
  maxCreditDays  Int
  taxPin  String
  dob     DateTime?
  nationalID  String @unique
  country String
  location String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

enum CustomerType{
  RETAIL
  WHOLESALE
  DISTRIBUTOR
  OTHER
}

model User {
  id          Int      @id @default(autoincrement())
  email       String   @unique
  username    String   @unique
  password    String
  firstname   String
  lastname    String
  phone       String   @unique
  dob         DateTime? @db.Date
  gender      Gender
  image       String
  role        Role     @default(ATTENDANT)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  shops       Shop[]   @relation("AdminShops") // Relationship as admin
  attendedShops Shop[] @relation("ShopAttendants") // Many-to-many relationship with Shop
}

model Shop {
  id          Int      @id @default(autoincrement())
  name        String
  location    String
  slug        String   @unique
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  adminId     Int
  admin       User     @relation("AdminShops", fields: [adminId], references: [id])
  attendants  User[]   @relation("ShopAttendants") // Many-to-many relationship with User
}

// Enums for Gender and Role (if needed)
enum Gender {
  MALE
  FEMALE
  OTHER
}

enum Role {
  ADMIN
  ATTENDANT
}
